-- Emma Virnelli's Dental Database
-- Create a database for a dental office

DROP SCHEMA dental_office CASCADE;
CREATE SCHEMA dental_office;

-- Patients
DROP TABLE IF EXISTS dental_office.patients;
CREATE TABLE dental_office.patients (
    first_name varchar(50) NOT NULL,
    last_name varchar(50) NOT NULL,
    date_of_birth date NOT NULL,
    email varchar(50),
    phone_number varchar(15) NOT NULL PRIMARY KEY,
    address varchar(200) NOT NULL
);

INSERT INTO dental_office.patients (first_name, last_name, date_of_birth, email, phone_number, address) VALUES
('Molly', 'Toothsome', '1982-09-01', 'molartoothsome@smilemail.com', '555-666-7777', '321 Filling Drive, Dentville, LA'),
('Gumby', 'Drop', '1975-12-15', 'gumdrop@sweetmail.com', '555-333-4444', '123 Candy Lane, Sugartown, CA'),
('Lucy', 'Smile', '1998-05-25', 'flossysmile@brushmail.com', '555-111-2222', '901 Brush Road, Sunnyville, FL'),
('Wisdom', 'Tooth', '1990-03-20', 'wisdomtooth@smartmail.com', '555-888-9999', '456 Molar Avenue, Dentville, NY');

-- Table for the treatment, how much it is, and the amount of time it will take
DROP TABLE IF EXISTS dental_office.treatments;
CREATE TABLE dental_office.treatments (
    treatment_name varchar(50) NOT NULL PRIMARY KEY,
    treatment_cost numeric(7,2) NOT NULL, 
	cost_updated date NOT NULL,
    treatment_duration_min smallint NOT NULL
);

INSERT INTO dental_office.treatments (treatment_name, treatment_cost, cost_updated, treatment_duration_min)
VALUES
('Teeth Cleaning', 100.00, '2025-03-10', 30),
('Cavity Filling', 150.00, '2025-03-10', 45),
('Tooth Extraction', 200.00, '2025-03-10', 60),
('Root Canal', 800.00, '2025-03-10', 120),
('Crown Fitting', 1000.00, '2025-03-10', 90),
('Teeth Whitening', 300.00, '2025-03-10', 60);

-- TABLE for dentists and their info
DROP TABLE IF EXISTS dental_office.dentists;
CREATE TABLE dental_office.dentists (
    first_name varchar(50) NOT NULL,
    last_name varchar(50) NOT NULL,
    experience smallint,
    dentist_license varchar(15) NOT NULL PRIMARY KEY, 
    phone_number varchar(15) NOT NULL,
    hire_date date NOT NULL
);

INSERT INTO dental_office.dentists (first_name, last_name, experience, dentist_license, phone_number, hire_date) VALUES
('Flossy', 'Brush', 10, 'DDS123456', '555-222-3333', '2015-06-01'),
('Ginger', 'Vitis', 5, 'DDS789012', '555-444-5555', '2020-01-15'),
('Chip', 'Incisor', 15, 'DDS345678', '555-666-7777', '2010-03-22'),
('Pearl', 'White', 8, 'DDS901234', '555-888-9999', '2017-09-10');

-- Table for dentist specialties
DROP TABLE IF EXISTS dental_office.dentist_specialties;
CREATE TABLE dental_office.dentist_specialties (
    dentist_license varchar(15) NOT NULL,
    treatment_name varchar(50) NOT NULL,
    PRIMARY KEY (dentist_license, treatment_name)
);

ALTER TABLE dental_office.dentist_specialties ADD CONSTRAINT fk_dentist_license 
FOREIGN KEY (dentist_license) REFERENCES dental_office.dentists(dentist_license) ON DELETE SET NULL;

ALTER TABLE dental_office.dentist_specialties ADD CONSTRAINT fk_treatment_name 
FOREIGN KEY (treatment_name) REFERENCES dental_office.treatments(treatment_name) ON DELETE CASCADE;

INSERT INTO dental_office.dentist_specialties (dentist_license, treatment_name) VALUES
('DDS123456', 'Teeth Cleaning'),
('DDS123456', 'Cavity Filling'),
('DDS789012', 'Tooth Extraction'),
('DDS789012', 'Root Canal'),
('DDS345678', 'Crown Fitting'),
('DDS345678', 'Teeth Whitening'),
('DDS901234', 'Teeth Cleaning'),
('DDS901234', 'Cavity Filling');

ALTER TABLE dental_office.dentist_specialties DROP CONSTRAINT IF EXISTS fk_dentist_license;

ALTER TABLE dental_office.dentist_specialties ADD CONSTRAINT fk_dentist_license FOREIGN KEY (dentist_license) REFERENCES dental_office.dentists(dentist_license) ON DELETE CASCADE;

-- Be able to track appointments
DROP TABLE IF EXISTS dental_office.appointments;
CREATE TABLE dental_office.appointments (
    appointment_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    patient_phone varchar(15) NOT NULL,
    dentist_license varchar(15) NOT NULL,
    treatment_name varchar(50) NOT NULL,
    appointment_period tsrange NOT NULL,
    reminder_sent boolean NOT NULL DEFAULT FALSE,
    checked_in boolean NOT NULL DEFAULT FALSE
);

-- foreign key constraints to refence the other tables
ALTER TABLE dental_office.appointments ADD CONSTRAINT fk_patient_phone FOREIGN KEY (patient_phone) REFERENCES dental_office.patients(phone_number);

ALTER TABLE dental_office.appointments ADD CONSTRAINT fk_dentist_license_appt FOREIGN KEY (dentist_license) REFERENCES dental_office.dentists(dentist_license);

ALTER TABLE dental_office.appointments ADD CONSTRAINT fk_treatment_name_appt FOREIGN KEY (treatment_name) REFERENCES dental_office.treatments(treatment_name);

ALTER TABLE dental_office.appointments ADD CONSTRAINT no_dentist_overlap 
    EXCLUDE USING GIST (
        dentist_license WITH =,
        appointment_period WITH &&
    );

ALTER TABLE dental_office.appointments ADD CONSTRAINT no_patient_overlap 
    EXCLUDE USING GIST (
        patient_phone WITH =,
        appointment_period WITH &&
    );

INSERT INTO dental_office.appointments (patient_phone, dentist_license, treatment_name, appointment_period, reminder_sent, checked_in) VALUES
('555-666-7777', 'DDS123456', 'Teeth Cleaning', tsrange('2025-03-15 09:00:00', '2025-03-15 09:30:00'), FALSE, FALSE),
('555-111-2222', 'DDS789012', 'Root Canal', tsrange('2025-03-16 14:00:00', '2025-03-16 16:00:00'), FALSE, FALSE),
('555-333-4444', 'DDS345678', 'Crown Fitting', tsrange('2025-03-17 11:00:00', '2025-03-17 12:30:00'), FALSE, FALSE),
('555-888-9999', 'DDS901234', 'Cavity Filling', tsrange('2025-03-18 10:00:00', '2025-03-18 10:45:00'), FALSE, FALSE);

-- Table to see what treatments are offered during an appointment 
DROP TABLE IF EXISTS dental_office.appointment_treatments;
CREATE TABLE dental_office.appointment_treatments (
    appointment_id int GENERATED BY DEFAULT AS IDENTITY,
    treatment_name varchar(50) NOT NULL,
    dentist_license varchar(15) NOT NULL,
    number_treatments smallint NOT NULL,
	appointment_cost numeric(7,2) NOT NULL, 
    PRIMARY KEY (appointment_id, treatment_name, dentist_license)
);

ALTER TABLE dental_office.appointment_treatments ADD CONSTRAINT fk_appointment_id FOREIGN KEY (appointment_id) REFERENCES dental_office.appointments(appointment_id) ON DELETE RESTRICT;

ALTER TABLE dental_office.appointment_treatments ADD CONSTRAINT fk_dentist_license_treatment_specialty FOREIGN KEY (dentist_license, treatment_name) REFERENCES dental_office.dentist_specialties(dentist_license, treatment_name) ON DELETE CASCADE;

-- At least one treatment
ALTER TABLE dental_office.appointment_treatments ADD CONSTRAINT positive_treatments CHECK (number_treatments > 0);


INSERT INTO dental_office.appointment_treatments (appointment_id, treatment_name, dentist_license, number_treatments, appointment_cost ) VALUES
(1, 'Teeth Cleaning', 'DDS123456', 1, 100.00),
(2, 'Root Canal', 'DDS789012', 1, 800.00),
(3, 'Crown Fitting', 'DDS345678', 1, 1000.00),
(4, 'Cavity Filling', 'DDS901234', 2, 300.00);

-- Table to keep track of patient payments
DROP TABLE IF EXISTS dental_office.patient_payments;
CREATE TABLE dental_office.patient_payments (
    patient_phone varchar(15) NOT NULL,
    payment_date date NOT NULL, 
    payment_amount numeric(6,2) NOT NULL,
    payment_method varchar(20) NOT NULL,
    PRIMARY KEY (patient_phone, payment_date)
);

ALTER TABLE dental_office.patient_payments 
ADD CONSTRAINT fk_patient_phone_payment FOREIGN KEY (patient_phone) REFERENCES dental_office.patients(phone_number);

INSERT INTO dental_office.patient_payments (patient_phone, payment_date, payment_amount, payment_method) VALUES
('555-666-7777', '2025-03-15', 100.00, 'Credit Card'),
('555-111-2222', '2025-03-16', 800.00, 'Debit Card'),
('555-333-4444', '2025-03-17', 1000.00, 'Cash'),
('555-888-9999', '2025-03-18', 300.00, 'Credit Card');
